<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lenovo.bean.ClosingPrice">
    <!-- 自定义返回结果集 -->
    <resultMap id="ClosingPriceBean" type="com.lenovo.bean.ClosingPrice">
        <!--<id property="id" column="id" javaType="java.lang.Integer"></id>-->
        <result property="id" column="id" javaType="java.lang.Integer"/>
        <result property="closing" column="closing" javaType="java.lang.Integer"/>
        <result property="resultId" column="resultId" javaType="java.lang.Integer"/>
        <result property="result" column="result" javaType="java.lang.String"/>
        <result property="ma20" column="ma20" javaType="java.lang.Double"/>
        <result property="ma50" column="ma50" javaType="java.lang.Double"/>
    </resultMap>
    <select id="queryPriceById" resultMap="ClosingPriceBean" parameterType="int"
            resultType="com.lenovo.bean.ClosingPrice">
        select * from closingprice where  id = #{id}
    </select>
    <select id="queryAvgPriceById" resultType="Double" parameterType="com.lenovo.bean.ClosingPricePage">
        select avg(closing) from  closingprice where  id &gt;=#{begin} and id &lt;=#{end}
    </select>
    <insert id="insertData" useGeneratedKeys="true" keyProperty="id" parameterType="com.lenovo.bean.ClosingPrice">
        insert into closingprice (closing,resultId) values (#{closing},#{resultId})
    </insert>
    <!--<insert id="insertDataBatch"  parameterType="com.lenovo.bean.ClosingPrice">
        insert into closingprice (closing,resultId) values (4,5) , (6,7)
    </insert>-->
    <insert id="insertDataBatch" parameterType="java.util.List">
        insert into closingprice (closing,resultId,qihao,result) values
        <foreach collection="list" item="item" separator=",">
            (#{item.closing},#{item.resultId},#{item.qihao},#{item.result})
        </foreach>
    </insert>
    <select id="selectAvg" resultType="com.lenovo.bean.AvgBean" parameterType="java.util.List">
        <foreach collection="list" item="item" separator="union">
            select avg(closing) as &quot;avg&quot;, id as &quot;id&quot; from closingprice where id &gt;= #{item.begin}
            and id &lt;=#{item.end}
        </foreach>
        order by id ASC
    </select>
    <select id="selectMaIntersection" resultType="com.lenovo.bean.ClosingPrice"
            parameterType="com.lenovo.bean.ClosingPricePage">
            select * from  closingprice where id &gt;= #{begin} and id &lt;=#{end}
    </select>
    <!--<select id="selectMaIntersection"  resultType="com.lenovo.bean.ClosingPrice" parameterType="java.util.List">
        <foreach collection ="list" item="item"  separator ="union">
            select * from  closingprice where id &gt;= #{item.begin} and id &lt;=#{item.end}
        </foreach > order by id ASC
    </select>-->
    <!--<select id="selectAvg"  resultType="int" >
        select count(*) from  closingprice where id &gt;= 1 and id &lt;=4 union select count(*) from  closingprice where id &gt;= 1 and id &lt;=5
    </select>-->
    <update id="batchUpdate" parameterType="com.lenovo.bean.AvgBean">
      update closingprice set ma60=#{avg} where id=#{id}
    </update>

    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys
                方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->


    <!--<insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into t_user (username,password,account) values (#{username},#{password},#{account})
    </insert>

    <update id="updateUser">
        update t_user set username=#{username},password=#{password},account=#{account} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from t_user where id=#{id}
    </delete>

    <select id="selectUserById" parameterType="int" resultMap="userMap">
        select * from t_user where id=#{id}
    </select>-->


</mapper>